components:
  schemas:

    ServiceSiteId:
      type: string
      minLength: 1
      maxLength: 64
      description: The unique identifier for a service site
      example: &service-site-id "site-123"

    DeviceId:
      type: string
      minLength: 1
      maxLength: 64
      description: The unique identifier for a device
      example: &device-id "device-1"

    DeviceIdList:
      type: array
      description: List of device IDs
      items:
        $ref: "#/components/schemas/DeviceId"
      example: &device-id-list
        - *device-id
        - &device-id2 "device-2"

    NetworkId:
      type: string
      minLength: 1
      maxLength: 64
      description: The unique identifier for the network.
      example: &network-id "wifi-1"

    NetworkIdList:
      type: array
      description: List of network IDs
      items:
        $ref: "#/components/schemas/NetworkId"
      example: &network-id-list
        - *network-id
        - &network-id2 "wifi-2"

    NetworkVersion:
      type: string
      minLength: 1
      maxLength: 64
      description: The unique version for the network.
      example: &network-version "1234ABCD"

    RebootId:
      type: string
      minLength: 1
      maxLength: 64
      description: The unique identifier for the reboot request.
      example: &reboot-id "reboot-1"

    GeographicPoint:
      type: object
      properties:
        latitude:
          type: number
          format: double
          description: The latitude coordinate
          example: &geographic-point-latitude 40.7128
        longitude:
          type: number
          format: double
          description: The longitude coordinate
          example: &geographic-point-longitude -74.0060
        elevation:
          type: object
          properties:
            value:
              type: number
              format: double
              description: The elevation value
              example: &geographic-point-elevation-value 10.0
            units:
              type: string
              enum: [feet, meters]
              description: The units of elevation (feet or meters)
              example: &geographic-point-elevation-units "feet"
          required:
            - value
            - units
          example: &geographic-point-elevation
            value: *geographic-point-elevation-value
            units: *geographic-point-elevation-units
      required:
        - latitude
        - longitude
      example: &geographic-point
        latitude: *geographic-point-latitude
        longitude: *geographic-point-longitude
        elevation: *geographic-point-elevation

    PropertyAddress:
      type: object
      externalDocs:
        description: TMF673 Geographic Address Management API User Guide v4.0.0
        url: https://www.tmforum.org/resources/specification/tmf673-geographic-address-management-api-user-guide-v4-0-0/
      properties:
        id:
          type: string
          description: The unique identifier for the property address
          minLength: 1
          maxLength: 64
          example: &property-address-id "address-123"
        addressLine1:
          type: string
          maxLength: 128
          description: The first line of the address
          example: &property-address-address-line-1 "123 Main St"
        addressLine2:
          type: string
          maxLength: 128
          description: The second line of the address
          example: &property-address-address-line-2 "Suite 456"
        streetNr:
          type: string
          maxLength: 64
          description: The street number
          example: &property-address-street-nr "123"
        streetNrSuffix:
          type: string
          maxLength: 64
          description: The suffix for the street number
          example: &property-address-street-nr-suffix "A"
        streetNrLast:
          type: string
          maxLength: 64
          description: The last street number
          example: &property-address-street-nr-last "125"
        streetNrLastSuffix:
          type: string
          maxLength: 64
          description: The suffix for the last street number
          example: &property-address-street-nr-last-suffix "B"
        streetName:
          type: string
          maxLength: 64
          description: The name of the street
          example: &property-address-street-name "Main"
        subUnitType:
          type: string
          maxLength: 64
          description: The type of sub-unit (e.g., Apartment, Suite)
          example: &property-address-sub-unit-type "Apartment"
        subUnitNr:
          type: string
          maxLength: 64
          description: The number of the sub-unit
          example: &property-address-sub-unit-nr "A12"
        levelType:
          type: string
          maxLength: 64
          description: The type of level (e.g., Floor, Basement)
          example: &property-address-level-type "Floor"
        levelNr:
          type: string
          maxLength: 64
          description: The number of the level
          example: &property-address-level-nr "3"
        buildingName:
          type: string
          maxLength: 64
          description: The name of the building
          example: &property-address-building-name "Example Building"
        privateStreetName:
          type: string
          maxLength: 64
          description: The name of a private street
          example: &property-address-private-street-name "Private Rd"
        locality:
          type: string
          maxLength: 64
          description: The locality (neighborhood, area)
          example: &property-address-locality "Example Locality"
        city:
          type: string
          maxLength: 128
          description: The city or town
          example: &property-address-city "Example State"
        stateOrProvince:
          type: string
          maxLength: 64
          description: The state or province
          example: &property-address-state-or-province "EX"
        country:
          type: string
          maxLength: 64
          description: The country
          example: &property-address-country "United States"
        postCode:
          type: string
          maxLength: 64
          description: The postal code or ZIP code
          example: &property-address-post-code "12345"
        postCodeExtension:
          type: string
          maxLength: 64
          description: The postal code extension
          example: &property-address-post-code-extension "6789"
      example: &property-address
        id: *property-address-id
        addressLine1: *property-address-address-line-1
        addressLine2: *property-address-address-line-2
        streetNr: *property-address-street-nr
        streetNrSuffix: *property-address-street-nr-suffix
        streetNrLast: *property-address-street-nr-last
        streetNrLastSuffix: *property-address-street-nr-last-suffix
        streetName: *property-address-street-name
        subUnitType: *property-address-sub-unit-type
        subUnitNr: *property-address-sub-unit-nr
        levelType: *property-address-level-type
        levelNr: *property-address-level-nr
        buildingName: *property-address-building-name
        privateStreetName: *property-address-private-street-name
        locality: *property-address-locality
        city: *property-address-city
        stateOrProvince: *property-address-state-or-province
        country: *property-address-country
        postCode: *property-address-post-code
        postCodeExtension: *property-address-post-code-extension

    ServiceSite:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ServiceSiteId"
        name:
          type: string
          maxLength: 64
          example: &service-site-name "Example Service Site 1"
        description:
          type: string
          maxLength: 64
          example: &service-site-description "This is the first example service site"
        devices:
          allOf:
            - description: The IDs of devices located at this service site
            - $ref: "#/components/schemas/DeviceIdList"
        location:
          type: object
          properties:
            geographicPoint:
              $ref: "#/components/schemas/GeographicPoint"
            propertyAddress:
              $ref: "#/components/schemas/PropertyAddress"
          example: &service-site-location
            geographicPoint: *geographic-point
            propertyAddress: *property-address
      required:
        - id
      example: &service-site
        id: *service-site-id
        name: *service-site-name
        description: *service-site-description
        devices: *device-id-list
        location: *service-site-location

    ServiceSiteList:
      type: array
      items:
        $ref: "#/components/schemas/ServiceSite"
      example: &service-site-list
        - *service-site
        - id: &service-site-id2 "site-456"
          name: &service-site-name2 "Example Service Site 2"
          description: &service-site-description2 "This is the second example service site"
          devices: &service-site-devices2
            - "device-3"
            - "device-4"
          location: &service-site-location2
            geographicPoint:
              latitude: 41.8781
              longitude: -87.6298
              elevation:
                value: 5.0
                units: "meters"
            propertyAddress:
              id: "address-2"
              addressLine1: "456 Elm St"
              streetNr: "456"
              streetName: "Elm"
              locality: "Another Locality"
              city: "Another City"
              stateOrProvince: "AY"
              country: "Another Country"
              postCode: "67890"

    NetworkRole:
      description: >-
        Role of the network on a device.
      type: string
      enum: [primary, auxiliary]
      default: "auxiliary"
      example: &network-role "primary"

    NetworkDeviceConfiguration:
      type: object
      description: >-
        A specific network configuration with an implied network to configure on a specific network access device with
        specified role.
      properties:
        device:
          description: "ID of the device with the network"
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - example: *device-id
        role:
          description: >-
            Role of the network on the device.  Defaults to "auxiliary" if unspecified.
          default: "auxiliary"
          allOf:
            - $ref: "#/components/schemas/NetworkRole"
            - example: *network-role
      required: ["device"]
      example: &network-device-configuration
        device: *device-id
        role: *network-role

    NetworkDeviceReplacement:
      type: object
      description: >-
        A specific network configuration with an implied network to replace an existing network on specific network
        access device.
      properties:
        device:
          description: "ID of the device with the network"
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - example: *device-id
        replace:
          description: >-
            Network to replace on the device.
          allOf:
            - $ref: "#/components/schemas/NetworkId"
            - example: *network-id
      required: ["device", "replace"]
      example: &network-device-replacement
        device: *device-id
        replace: *network-id

    NetworkDeviceIntersectionCreate:
      type: object
      description: |
        Properties of a specific network configuration with an implied network on a specific network access device.
      properties:
        intersectionType:
          type: string
          enum: ["NetworkDeviceRoleConfiguration", "NetworkDeviceReplacement"]
          example: &network-device-intersection-type "NetworkDeviceRoleConfiguration"
      required:
        - intersectionType
      discriminator:
        propertyName: intersectionType
        mappings:
          - NetworkDeviceRoleConfiguration: "#/components/schemas/NetworkDeviceRoleConfiguration"
          - NetworkDeviceReplacement: "#/components/schemas/NetworkDeviceReplacement"
      example: &network-device-intersection-create
        intersectionType: *network-device-intersection-type
        device: *device-id
        role: *network-role

    NetworkDeviceIntersectionCreateList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkDeviceIntersectionCreate"
      example: &network-device-intersection-create-list
        - *network-device-intersection-create
        - &network-device-intersection-create-2
          intersectionType: &network-device-intersection-type-2 "NetworkDeviceReplacement"
          device: *device-id2
          replace: *network-id2

    NetworkDeviceIntersection:
      allOf:
        - $ref: "#/components/schemas/NetworkDeviceConfiguration"
        - description: >-
            Properties of a specific network configuration with an implied network on a specific network access device.
          properties:
            removable:
              type: boolean
              description: >-
                Flag indicating if the network can be removed.  Defaults to `true` if unspecified.
              default: true
              example: &network-removable false
          required:
            - device
          example: &network-device-intersection
            device: *device-id
            role: *network-role
            removable: *network-removable

    NetworkDeviceIntersectionList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkDeviceIntersection"
      example: &network-device-intersection-list
        - *network-device-intersection

    DeviceNetworkIntersection:
      type: object
      description: >-
        Properties of a specific network configuration on a specific network access device with an implied device.
      properties:
        network:
          description: "ID of the network."
          allOf:
            - $ref: "#/components/schemas/NetworkId"
            - example: *network-id
        role:
          description: >-
            Role of the network.  Defaults to "auxiliary" if unspecified.
          default: "auxiliary"
          allOf:
            - $ref: "#/components/schemas/NetworkRole"
            - example: *network-role
        removable:
          type: boolean
          description: >-
            Flag indicating if the network can be removed.  Defaults to `true` if unspecified.
          default: true
          example: *network-removable
      required:
        - network
      example: &device-network-intersection
        network: *network-id
        role: *network-role
        removable: *network-removable

    DeviceNetworkIntersectionList:
      type: array
      items:
        $ref: "#/components/schemas/DeviceNetworkIntersection"
      example: &device-network-intersection-list
        - *device-network-intersection

    Device:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/DeviceId"
        name:
          type: string
          minLength: 1
          maxLength: 100
          description: The name of the device
          example: &device-name "Gateway-1"
        description:
          type: string
          minLength: 0
          maxLength: 255
          description: A description of the device
          example: &device-description "A Wi-Fi gateway device"
        hardwareAddress:
          description: The hardware address of the device
          oneOf:
            - type: object
              properties:
                hardwareAddressType:
                  type: string
                  enum: ["EUI-48"]
                  example: &device-hardware-address-type "EUI-48"
                value:
                  type: string
                  pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
                  example: &device-hardware-address-value "12:34:56:78:9A:BC"
              required:
                - hardwareAddressType
                - value
          discriminator:
            propertyName: hardwareAddressType
          example: &device-hardware-address
            hardwareAddressType: *device-hardware-address-type
            value: *device-hardware-address-value
        serviceSite:
          $ref: "#/components/schemas/ServiceSiteId"
        networks:
          allOf:
            - $ref: "#/components/schemas/DeviceNetworkIntersectionList"
            - description: The IDs of networks attached to the device
              example: *device-network-intersection-list
        maxAuxiliaryNetworks:
          type: integer
          description: >-
            Maximum amount of auxiliary networks the device supports for a given client.  For the `only-own` client
            roles, this is a count of what is in-use by the client + remaining count of what the client can create.  For
            `primary`-only client roles, the field is not used.  For `auxiliary`-only client roles, it is the maximum
            number the device supports.
          minimum: 1
          example: &device-max-networks 2
      required:
        - id
      example: &device
        id: *device-id
        name: *device-name
        description: *device-description
        hardwareAddress: *device-hardware-address
        serviceSite: *service-site-id
        networks: *device-network-intersection-list
        maxAuxiliaryNetworks: *device-max-networks

    DeviceList:
      type: array
      items:
        $ref: "#/components/schemas/Device"
      example: &device-list
        - *device
        - id: *device-id2
          name: &device-name2 "Gateway-2"
          description: &device-description2 "A second Wi-Fi gateway devices"
          hardwareAddress: &device-hardware-address2
            hardwareAddressType: "EUI-48"
            value: "AB:CD:EF:12:34:56"
          serviceSite: *service-site-id2
          networks: *device-network-intersection-list
          maxAuxiliaryNetworks: &device-max-networks2 2

    WpaPersonalDetail:
      type: object
      properties:
        password:
          type: string
          maxLength: 255
          description: The password for the WPA Personal Wi-Fi network
          example: &wpa-personal-password "my-password"
        securityModeType:
          type: string
          enum:
            - WPA2-Personal
            - WPA2-WPA3-Personal
            - WPA3-Personal
          description: |
            The security mode type for the WPA Personal Wi-Fi network.
            Leave blank to auto-select.
          example: &wpa-personal-security-mode-type "WPA3-Personal"
      required:
        - password
      example: &wpa-personal
        password: *wpa-personal-password
        securityModeType: *wpa-personal-security-mode-type

    WpaEnterpriseDetail:
      type: object
      properties:
        authServer:
          type: string
          maxLength: 255
          description: The authentication server for the WPA Enterprise Wi-Fi network
          example: &wpa-enterprise-auth-server "1.2.3.4"
        securityModeType:
          type: string
          enum:
            - WPA2-Enterprise
            - WPA3-Enterprise
          description: The security mode type for the WPA Enterprise Wi-Fi network
          example: &wpa-enterprise-security-mode-type "WPA3-Enterprise"
      required:
        - securityModeType
      example: &wpa-enterprise
        authServer: *wpa-enterprise-auth-server
        securityModeType: *wpa-enterprise-security-mode-type

    WiFiAccessDetail:
      type: object
      properties:
        accessType:
          type: string
          enum:
            - Wi-Fi
          example: &wifi-access-detail-access-type "Wi-Fi"
        ssid:
          type: string
          minLength: 2
          maxLength: 32
          description: The SSID (network name) of the Wi-Fi network
          example: &wifi-access-detail-ssid "my-ssid"
        securityMode:
          oneOf:
            - $ref: "#/components/schemas/WpaPersonalDetail"
            - $ref: "#/components/schemas/WpaEnterpriseDetail"
          discriminator:
            propertyName: securityModeType
            mapping:
              WPA2-Personal: "#/components/schemas/WpaPersonalDetail"
              WPA2-WPA3-Personal: "#/components/schemas/WpaPersonalDetail"
              WPA3-Personal: "#/components/schemas/WpaPersonalDetail"
              WPA2-Enterprise: "#/components/schemas/WpaEnterpriseDetail"
              WPA3-Enterprise: "#/components/schemas/WpaEnterpriseDetail"
          description: The security mode details for the Wi-Fi network
          example: *wpa-personal
      required:
        - accessType
      example: &wifi-access-detail
        accessType: *wifi-access-detail-access-type
        ssid: *wifi-access-detail-ssid
        securityMode: *wpa-personal

    AccessDetail:
      oneOf:
        - $ref: "#/components/schemas/WiFiAccessDetail"
      discriminator:
        propertyName: accessType
        mapping:
          Wi-Fi: "#/components/schemas/WiFiAccessDetail"
      example: *wifi-access-detail

    NetworkUpdate:
      type: object
      properties:
        description:
          type: string
          maxLength: 255
          description: A description of the network
          example: &network-description "my network"
        accessDetail:
          description: The access details for the network
          allOf:
            - $ref: "#/components/schemas/AccessDetail"
            - example: *wifi-access-detail
        expiration:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: |
                The expiration date and time of the network.  It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6)
                and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows
                2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z).
      example: &network-update
        description: *network-description
        accessDetail: *wifi-access-detail
        expiration: *date-time

    NetworkCreate:
      allOf:
        - $ref: "#/components/schemas/NetworkUpdate"
        - properties:
            devices:
              allOf:
                - $ref: "#/components/schemas/NetworkDeviceIntersectionCreateList"
                - minLength: 1
                  description: >-
                    List of network role and device pairs to configure the created network.
                  example:
                    - *network-device-intersection-create-list
          required:
            - accessDetail
          example: &network-create
            description: *network-description
            accessDetail: *wifi-access-detail
            expiration: *date-time
            devices: *network-device-intersection-create-list

    Network:
      allOf:
        - $ref: "#/components/schemas/NetworkUpdate"
        - properties:
            id:
              $ref: "#/components/schemas/NetworkId"
            devices:
              allOf:
                - $ref: "#/components/schemas/NetworkDeviceIntersectionList"
                - minLength: 1
                  description: >-
                    List of devices the network is configured on.
                  example:
                    - *network-device-intersection-create-list
            createdAt:
              allOf:
                - $ref: "#/components/schemas/DateTime"
                - description: |
                    The creation date and time of the network.  It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6)
                    and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows
                    2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z).
            createdBy:
              type: string
              maxLength: 100
              description: The user who created the network
              example: &network-created-by "user-1"
            modifiedAt:
              allOf:
                - $ref: "#/components/schemas/DateTime"
                - description: |
                    The last update date and time of the network.  It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6)
                    and must have time zone. Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows
                    2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z).
            modifiedBy:
              type: string
              maxLength: 100
              description: The user who last updated the network
              example: &network-modified-by "user-2"
            version:
              $ref: "#/components/schemas/NetworkVersion"
          required:
            - id
            - accessDetail
          example: &network
            id: *network-id
            description: *network-description
            accessDetail: *wifi-access-detail
            expiration: *date-time
            devices: *network-device-intersection-list
            createdAt: *date-time
            createdBy: *network-created-by
            modifiedAt: *date-time
            modifiedBy: *network-modified-by
            version: *network-version

    NetworkList:
      type: array
      items:
        $ref: "#/components/schemas/Network"
      example: &network-list
        - *network
        - id: *network-id2
          description: &network-description2 "my second network"
          accessDetail: &network-access-detail2
            accessType: "Wi-Fi"
            ssid: "my-second-ssid"
            securityMode:
              password: "my-other-password"
              securityModeType: "WPA2-Personal"
          expiration: *date-time
          devices: &network-device-intersection-list2
            - device: *device-id2
              role: &network-role2 "auxiliary"
          createdAt: *date-time
          createdBy: &network-created-by2 "user-3"
          modifiedAt: *date-time
          modifiedBy: &network-modified-by2 "user-4"
          version: &network-version2 "0000FFFF"

    DeviceNetworkReplacement:
      type: object
      description: |
        A device network replacement operation.
      properties:
        device:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - example: *device-id
        replace:
          allOf:
            - $ref: "#/components/schemas/NetworkId"
            - example: *network-id
      required:
        - device
        - replace
      example: &device-network-replacement
        device: "device-4"
        replace: "wifi-5"

    DeviceNetworkReplacementList:
      type: array
      items:
        $ref: "#/components/schemas/DeviceNetworkReplacement"
      example: &device-network-replacement-list
        - *device-network-replacement

    BulkDeviceUpdate:
      type: object
      description: |
        Update a set of devices by inserting or deleting devices by ID from that set.
      properties:
        insert:
          allOf:
            - $ref: "#/components/schemas/DeviceIdList"
            - example: *device-id-list
        delete:
          allOf:
            - $ref: "#/components/schemas/DeviceIdList"
            - example: &bulk-device-update-delete
                - "device-3"
        replace:
          allOf:
            - $ref: "#/components/schemas/DeviceNetworkReplacementList"
            - example: *device-network-replacement-list
      example: &bulk-device-update
        insert: *device-id-list
        delete: *bulk-device-update-delete
        replace: *device-network-replacement-list

    NetworkReplacement:
      type: object
      description: |
        A network replacement operation.
      properties:
        replace:
          allOf:
            - $ref: "#/components/schemas/NetworkId"
            - example: *network-id
        with:
          allOf:
            - $ref: "#/components/schemas/NetworkId"
            - example: *network-id2
      required:
        - replace
        - with
      example: &network-replacement
        replace: "wifi-4"
        with: "wifi-5"

    NetworkReplacementList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkReplacement"
      example: &network-replacement-list
        - *network-replacement

    BulkNetworkUpdate:
      type: object
      description: |
        Update a set of networks by inserting, deleting, or replacing networks by ID from that set.
      properties:
        insert:
          allOf:
            - $ref: "#/components/schemas/NetworkIdList"
            - example: *network-id-list
        delete:
          allOf:
            - $ref: "#/components/schemas/NetworkIdList"
            - example: &bulk-network-update-delete
                - "wifi-3"
        replace:
          description: List of network replacements.
          allOf:
            - $ref: "#/components/schemas/NetworkReplacementList"
            - example: *network-replacement-list
      example: &bulk-network-update
        insert: *network-id-list
        delete: *bulk-network-update-delete
        replace: *network-replacement-list

    RebootRequestUpdate:
      type: object
      properties:
        message:
          type: string
          maxLength: 255
          description: A message related to the reboot request
          example: &reboot-message "reboot to correct performance"
        atTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: |
                The date and time to reboot the device. Do not include 'atTime' to request immediate reboot.  It must
                follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.
                Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or
                2023-07-03T12:27:08.312Z).
      example: &reboot-request-update
        message: *reboot-message
        atTime: *date-time

    RebootRequestCreate:
      allOf:
        - $ref: "#/components/schemas/RebootRequestUpdate"
        - properties:
            devices:
              type: array
              items:
                $ref: "#/components/schemas/DeviceId"
              description: >-
                List of devices to reboot. When undefined, the reboot targets the 'default' device (simple use case that
                wouldn't use locations or devices). Throws an error when creating if there is no 'default' device.
              example: *device-id-list
          example: &reboot-create
            message: *reboot-message
            atTime: *date-time
            devices: *device-id-list

    RebootRequest:
      allOf:
        - $ref: "#/components/schemas/RebootRequestCreate"
        - properties:
            id:
              $ref: "#/components/schemas/RebootId"
            createdAt:
              allOf:
                - $ref: "#/components/schemas/DateTime"
                - description: |
                    The creation date and time of the reboot request.  It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6)
                    and must have time zone.  Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows
                    2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z).
            createdBy:
              type: string
              maxLength: 100
              description: The user who created the reboot request
              example: &reboot-created-by "user-1"
            modifiedAt:
              allOf:
                - $ref: "#/components/schemas/DateTime"
                - description: |
                    The last update date and time of the reboot request.  It must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6)
                    and must have time zone.  Recommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows
                    2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z).
            modifiedBy:
              type: string
              maxLength: 100
              description: The user who last updated the reboot request
              example: &reboot-modified-by "user-2"
          required:
            - id
          example: &reboot-request
            id: *reboot-id
            message: *reboot-message
            atTime: *date-time
            devices: *device-id-list
            createdAt: *date-time
            createdBy: *reboot-created-by
            modifiedAt: *date-time
            modifiedBy: *reboot-modified-by

    RebootRequestList:
      type: array
      items:
        $ref: "#/components/schemas/RebootRequest"
      example: &reboot-request-list
        - *reboot-request
        - id: &reboot-id2 "reboot-2"
          message: &reboot-message2 "my second reboot request"
          atTime: *date-time
          devices: &reboot-devices2
            - "device-3"
            - "device-4"
          createdAt: *date-time
          createdBy: &reboot-created-by2 "user-3"
          modifiedAt: *date-time
          modifiedBy: &reboot-modified-by2 "user-4"

  examples:
    BaseServiceSite:
      summary: Base Service Site
      description: |
        Output with the following scope(s):
          - `network-access-management:service-sites:read`
      value: &base-service-site
        id: *service-site-id

    ServiceSiteWithLocation:
      summary: Service Site with Location
      description: |
        Output with the following scope(s):
          - `network-access-management:service-sites.location:read`
      value: &service-site-with-location
        id: *service-site-id
        name: *service-site-name
        description: *service-site-description
        location: *service-site-location

    ServiceSiteWithDevices:
      summary: Service Site with Devices
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:service-sites:read`
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
            - `network-access-management:devices.hardware-address:read`
      value: &service-site-with-devices
        id: *service-site-id
        devices: *device-id-list

    ServiceSiteWithLocationAndDevices:
      summary: Service Site with Location and Devices
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:service-sites.location:read`
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
            - `network-access-management:devices.hardware-address:read`
      value: *service-site

    BaseServiceSiteList:
      summary: Base Service Site List
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:service-sites:read`
      value:
        - *base-service-site
        - id: *service-site-id2

    ServiceSiteListWithLocation:
      summary: Service Site List with Location
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:service-sites.location:read`
      value:
        - *service-site-with-location
        - id: *service-site-id2
          name: *service-site-name2
          description: *service-site-description2
          location: *service-site-location2

    ServiceSiteListWithDevices:
      summary: Service Site List with Devices
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:service-sites:read`
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
            - `network-access-management:devices.hardware-address:read`
      value:
        - *service-site-with-devices
        - id: *service-site-id2
          devices: *service-site-devices2

    ServiceSiteListWithLocationAndDevices:
      summary: Service Site List with Location and Devices
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:service-sites.location:read`
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
            - `network-access-management:devices.hardware-address:read`
      value: *service-site-list

    BaseDevice:
      summary: Base Device
      description: |
        Output with the following scope(s):
        - **one of**
          - `network-access-management:devices:read`
          - `network-access-management:devices:write`
      value: &base-device
        id: *device-id
        name: *device-name
        description: *device-description

    DeviceWithHardwareAddress:
      summary: Device with Hardware Address
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:devices.hardware-address:read`
      value: &device-with-hardware-address
        id: *device-id
        name: *device-name
        description: *device-description
        hardwareAddress: *device-hardware-address

    DeviceWithServiceSite:
      summary: Device with Service Site
      description: |
        Output with the following scope(s):
        - **all of**
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
          - **one of**
            - `network-access-management:service-sites:read`
            - `network-access-management:service-sites.location:read`
      value: &device-with-service-site
        id: *device-id
        name: *device-name
        description: *device-description
        serviceSite: *service-site-id

    DeviceWithNetworks:
      summary: Device with Networks
      description: |
        Output with the following scope(s):
        - **all of**
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
          - **one of**
            - `network-access-management:isolated-networks:read`
            - `network-access-management:isolated-networks:write`
            - `network-access-management:isolated-networks.primary:read`
            - `network-access-management:isolated-networks.primary:write`
            - `network-access-management:isolated-networks.auxiliary:read`
            - `network-access-management:isolated-networks.auxiliary:write`
      value: &device-with-networks
        id: *device-id
        name: *device-name
        description: *device-description
        networks: *device-network-intersection-list
        maxAuxiliaryNetworks: *device-max-networks

    DeviceWithHardwareAddressAndServiceSite:
      summary: Device with Hardware Address and Service Site
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:devices.hardware-address:read`
          - **one of**
            - `network-access-management:service-sites:read`
            - `network-access-management:service-sites.location:read`
      value: &device-with-hardware-address-and-service-site
        id: *device-id
        name: *device-name
        description: *device-description
        hardwareAddress: *device-hardware-address
        serviceSite: *service-site-id

    DeviceWithHardwareAddressAndNetworks:
      summary: Device with Hardware Address and Networks
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:devices.hardware-address:read`
          - **one of**
            - `network-access-management:isolated-networks:read`
            - `network-access-management:isolated-networks:write`
            - `network-access-management:isolated-networks.primary:read`
            - `network-access-management:isolated-networks.primary:write`
            - `network-access-management:isolated-networks.auxiliary:read`
            - `network-access-management:isolated-networks.auxiliary:write`
      value: &device-with-hardware-address-and-networks
        id: *device-id
        name: *device-name
        description: *device-description
        hardwareAddress: *device-hardware-address
        networks: *device-network-intersection-list
        maxAuxiliaryNetworks: *device-max-networks

    DeviceWithServiceSiteAndNetworks:
      summary: Device with Service Site and Networks
      description: |
        Output with the following scope(s):
        - **all of**
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
          - **one of**
            - `network-access-management:service-sites:read`
            - `network-access-management:service-sites.location:read`
          - **one of**
            - `network-access-management:isolated-networks:read`
            - `network-access-management:isolated-networks:write`
            - `network-access-management:isolated-networks.primary:read`
            - `network-access-management:isolated-networks.primary:write`
            - `network-access-management:isolated-networks.auxiliary:read`
            - `network-access-management:isolated-networks.auxiliary:write`
      value: &device-with-service-site-and-networks
        id: *device-id
        name: *device-name
        description: *device-description
        serviceSite: *service-site-id
        networks: *device-network-intersection-list
        maxAuxiliaryNetworks: *device-max-networks

    DeviceWithHardwareAddressAndServiceSiteAndNetworks:
      summary: Device with Hardware Address, Service Site, and Networks
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:devices.hardware-address:read`
          - **one of**
            - `network-access-management:service-sites:read`
            - `network-access-management:service-sites.location:read`
          - **one of**
            - `network-access-management:isolated-networks:read`
            - `network-access-management:isolated-networks:write`
            - `network-access-management:isolated-networks.primary:read`
            - `network-access-management:isolated-networks.primary:write`
            - `network-access-management:isolated-networks.auxiliary:read`
            - `network-access-management:isolated-networks.auxiliary:write`
      value: *device

    BaseDeviceList:
      summary: Base Device List
      description: |
        Output with the following scope(s):
        - **one of**
          - `network-access-management:devices:read`
          - `network-access-management:devices:write`
      value:
        - *base-device
        - id: *device-id2
          name: *device-name2
          description: *device-description2

    DeviceListWithHardwareAddress:
      summary: Device List with Hardware Address
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:devices.hardware-address:read`
      value:
        - *device-with-hardware-address
        - id: *device-id2
          name: *device-name2
          description: *device-description2
          hardwareAddress: *device-hardware-address2

    DeviceListWithServiceSite:
      summary: Device List with Service Site
      description: |
        Output with the following scope(s):
        - **all of**
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
          - **one of**
            - `network-access-management:service-sites:read`
            - `network-access-management:service-sites.location:read`
      value:
        - *device-with-service-site
        - id: *device-id2
          name: *device-name2
          description: *device-description2
          serviceSite: *service-site-id2

    DeviceListWithNetworks:
      summary: Device List with Networks
      description: |
        Output with the following scope(s):
        - **all of**
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
          - **one of**
            - `network-access-management:isolated-networks:read`
            - `network-access-management:isolated-networks:write`
            - `network-access-management:isolated-networks.primary:read`
            - `network-access-management:isolated-networks.primary:write`
            - `network-access-management:isolated-networks.auxiliary:read`
            - `network-access-management:isolated-networks.auxiliary:write`
      value:
        - *device-with-networks
        - id: *device-id2
          name: *device-name2
          description: *device-description2
          networks: *device-network-intersection-list
          maxAuxiliaryNetworks: *device-max-networks2

    DeviceListWithHardwareAddressAndServiceSite:
      summary: Device List with Hardware Address and Service Site
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:devices.hardware-address:read`
          - **one of**
            - `network-access-management:service-sites:read`
            - `network-access-management:service-sites.location:read`
      value:
        - *device-with-hardware-address-and-service-site
        - id: *device-id2
          name: *device-name2
          description: *device-description2
          hardwareAddress: *device-hardware-address2
          serviceSite: *service-site-id2

    DeviceListWithHardwareAddressAndNetworks:
      summary: Device List with Hardware Address and Networks
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:devices.hardware-address:read`
          - **one of**
            - `network-access-management:isolated-networks:read`
            - `network-access-management:isolated-networks:write`
            - `network-access-management:isolated-networks.primary:read`
            - `network-access-management:isolated-networks.primary:write`
            - `network-access-management:isolated-networks.auxiliary:read`
            - `network-access-management:isolated-networks.auxiliary:write`
      value:
        - *device-with-hardware-address-and-networks
        - id: *device-id2
          name: *device-name2
          description: *device-description2
          hardwareAddress: *device-hardware-address2
          networks: *device-network-intersection-list
          maxAuxiliaryNetworks: *device-max-networks2

    DeviceListWithServiceSiteAndNetworks:
      summary: Device List with Service Site and Networks
      description: |
        Output with the following scope(s):
        - **all of**
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
          - **one of**
            - `network-access-management:service-sites:read`
            - `network-access-management:service-sites.location:read`
          - **one of**
            - `network-access-management:isolated-networks:read`
            - `network-access-management:isolated-networks:write`
            - `network-access-management:isolated-networks.primary:read`
            - `network-access-management:isolated-networks.primary:write`
            - `network-access-management:isolated-networks.auxiliary:read`
            - `network-access-management:isolated-networks.auxiliary:write`
      value:
        - *device-with-service-site-and-networks
        - id: *device-id2
          name: *device-name2
          description: *device-description2
          serviceSite: *service-site-id2
          networks: *device-network-intersection-list
          maxAuxiliaryNetworks: *device-max-networks2

    DeviceListWithHardwareAddressAndServiceSiteAndNetworks:
      summary: Device List with Hardware Address, Service Site, and Networks
      description: |
        Output with the following scope(s):
        - **all of**
          - `network-access-management:devices.hardware-address:read`
          - **one of**
            - `network-access-management:service-sites:read`
            - `network-access-management:service-sites.location:read`
          - **one of**
            - `network-access-management:isolated-networks:read`
            - `network-access-management:isolated-networks:write`
            - `network-access-management:isolated-networks.primary:read`
            - `network-access-management:isolated-networks.primary:write`
            - `network-access-management:isolated-networks.auxiliary:read`
            - `network-access-management:isolated-networks.auxiliary:write`
      value: *device-list

    BaseNetwork:
      summary: Network Configuration with Default Device
      description: |
        Output with the following scope(s):
        - **one of**
          - `network-access-management:isolated-networks:read`
          - `network-access-management:isolated-networks:write`
          - `network-access-management:isolated-networks.primary:read`
          - `network-access-management:isolated-networks.primary:write`
          - `network-access-management:isolated-networks.auxiliary:read`
          - `network-access-management:isolated-networks.auxiliary:write`
      value: &base-network
        id: *network-id
        description: *network-description
        accessDetail: *wifi-access-detail
        expiration: *date-time
        createdAt: *date-time
        createdBy: *network-created-by
        modifiedAt: *date-time
        modifiedBy: *network-modified-by
        version: *network-version

    NetworkWithDevices:
      summary: Network Configuration
      description: |
        Output with the following scope(s):
        - **all of**
          - **one of**
            - `network-access-management:isolated-networks:read`
            - `network-access-management:isolated-networks:write`
            - `network-access-management:isolated-networks.primary:read`
            - `network-access-management:isolated-networks.primary:write`
            - `network-access-management:isolated-networks.auxiliary:read`
            - `network-access-management:isolated-networks.auxiliary:write`
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
            - `network-access-management:devices.hardware-address:read`
      value: *network

    NetworkUpdate:
      summary: Network Update
      description: |
        Post with the following scope(s):
        - **one of**
          - `network-access-management:isolated-networks:write`
          - `network-access-management:isolated-networks.primary:write`
          - `network-access-management:isolated-networks.auxiliary:write`
      value: *network-update

    BaseNetworkCreate:
      summary: Create Network on Default Device
      description: |
        Post with the following scope(s):
        - **one of**
          - `network-access-management:isolated-networks:write`
          - `network-access-management:isolated-networks.primary:write`
          - `network-access-management:isolated-networks.auxiliary:write`
      value:
        description: *network-description
        accessDetail: *wifi-access-detail
        expiration: *date-time

    NetworkCreateWithDevices:
      summary: Create Network on Devices
      description: |
        Post with the following scope(s):
        - **all of**
          - `network-access-management:devices:write`
          - **one of**
            - `network-access-management:isolated-networks:write`
            - `network-access-management:isolated-networks.primary:write`
            - `network-access-management:isolated-networks.auxiliary:write`
      value: *network-create

    BaseNetworkList:
      summary: Network List with Default Device
      description: |
        Output with the following scope(s):
        - **one of**
          - `network-access-management:isolated-networks:read`
          - `network-access-management:isolated-networks:write`
          - `network-access-management:isolated-networks.primary:read`
          - `network-access-management:isolated-networks.primary:write`
          - `network-access-management:isolated-networks.auxiliary:read`
          - `network-access-management:isolated-networks.auxiliary:write`
      value:
        - *base-network
        - id: *network-id2
          description: *network-description2
          accessDetail: *network-access-detail2
          expiration: *date-time
          createdAt: *date-time
          createdBy: *date-time
          modifiedAt: *date-time
          modifiedBy: *network-modified-by2
          version: *network-version2

    NetworkListWithDevices:
      summary: Network List with Devices
      description: |
        Output with the following scope(s):
        - **all of**
          - **one of**
            - `network-access-management:isolated-networks:read`
            - `network-access-management:isolated-networks:write`
            - `network-access-management:isolated-networks.primary:read`
            - `network-access-management:isolated-networks.primary:write`
            - `network-access-management:isolated-networks.auxiliary:read`
            - `network-access-management:isolated-networks.auxiliary:write`
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
            - `network-access-management:devices.hardware-address:read`
      value: *network-list

    BaseRebootRequest:
      summary: Reboot Request with Default Device
      description: |
        Output with the following scope(s):
        - **one of**
          - `network-access-management:reboot-requests:read`
          - `network-access-management:reboot-requests:write`
      value: &base-reboot-request
        id: *reboot-id
        message: *reboot-message
        atTime: *date-time
        createdAt: *date-time
        createdBy: *reboot-created-by
        modifiedAt: *date-time
        modifiedBy: *reboot-modified-by

    RebootRequestWithDevices:
      summary: Reboot Request
      description: |
        Output with the following scope(s):
        - **all of**
          - **one of**
            - `network-access-management:reboot-requests:read`
            - `network-access-management:reboot-requests:write`
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
            - `network-access-management:devices.hardware-address:read`
      value: *reboot-request

    RebootRequestUpdate:
      summary: Reboot Request Update
      description: |
        Post with the following scope(s):
        - **one of**
          - `network-access-management:reboot-requests:write`
      value: *reboot-request-update

    BaseRebootRequestCreate:
      summary: Create Reboot Request for Default Device
      description: |
        Post with the following scope(s):
        - **all of**
          - `network-access-management:reboot-requests:write`
      value: &reboot-request-update
        message: *reboot-message
        atTime: *date-time

    RebootRequestCreateWithDevices:
      summary: Create Reboot Request for Devices
      description: |
        Post with the following scope(s):
        - **all of**
          - `network-access-management:devices:write`
          - `network-access-management:reboot-requests:write`
      value: *reboot-create

    BaseRebootRequestList:
      summary: Reboot Request List with Default Device
      description: |
        Output with the following scope(s):
        - **one of**
          - `network-access-management:reboot-requests:read`
          - `network-access-management:reboot-requests:write`
      value:
        - *base-reboot-request
        - id: *reboot-id2
          message: *reboot-message2
          atTime: *date-time
          createdAt: *date-time
          createdBy: *reboot-created-by2
          modifiedAt: *date-time
          modifiedBy: *reboot-modified-by2

    RebootRequestListWithDevices:
      summary: Reboot Request List
      description: |
        Output with the following scope(s):
        - **all of**
          - **one of**
            - `network-access-management:reboot-requests:read`
            - `network-access-management:reboot-requests:write`
          - **one of**
            - `network-access-management:devices:read`
            - `network-access-management:devices:write`
            - `network-access-management:devices.hardware-address:read`
      value: *reboot-request-list

  responses:
    Generic400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
            GENERIC_400_OUT_OF_RANGE:
              description: Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested
              value:
                status: 400
                code: OUT_OF_RANGE
                message: Client specified an invalid range.

    Generic401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_401_UNAUTHENTICATED:
              description: Request cannot be authenticated
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials.
            GENERIC_401_AUTHENTICATION_REQUIRED:
              description: New authentication is needed, authentication is no longer valid
              value:
                status: 401
                code: AUTHENTICATION_REQUIRED
                message: New authentication is required.

    Generic403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_403_PERMISSION_DENIED:
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
            GENERIC_403_INVALID_TOKEN_CONTEXT:
              description: Reflect some inconsistency between information in some field of the API and the related OAuth2 Token
              value:
                status: 403
                code: INVALID_TOKEN_CONTEXT
                message: "{{field}} is not consistent with access token."

    Generic404:
      description: Not found
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_404_NOT_FOUND:
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: The specified resource is not found.
            GENERIC_404_SERVICE_SITE_NOT_FOUND:
              description: Service site identitier not found
              value:
                status: 404
                code: SERVICE_SITE_NOT_FOUND
                message: |
                  Service site identifier(s) not found: {{ServiceSiteId}}.
            GENERIC_404_DEVICE_NOT_FOUND:
              description: Device identifier(s) not found
              value:
                status: 404
                code: DEVICE_NOT_FOUND
                message: |
                  Device identifier(s) not found: {{DeviceId}}.
            GENERIC_404_NETWORK_NOT_FOUND:
              description: Network identitier(s) not found
              value:
                status: 404
                code: NETWORK_NOT_FOUND
                message: |
                  Network identitifer(s) not found: {{NetworkId}}.

    Generic405:
      description: Method Not Allowed
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_405_METHOD_NOT_ALLOWED:
              description: Invalid HTTP verb used with a given endpoint
              value:
                status: 405
                code: METHOD_NOT_ALLOWED
                message: The requested method is not allowed/supported on the target resource.

    Generic406:
      description: Not Acceptable
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_406_NOT_ACCEPTABLE:
              description: API Server does not accept the media type (`Accept-*` header) indicated by API client
              value:
                status: 406
                code: NOT_ACCEPTABLE
                message: The server cannot produce a response matching the content requested by the client through `Accept-*` headers.

    Generic409:
      description: Conflict
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_409_ABORTED:
              description: Concurreny of processes of the same nature/scope
              value:
                status: 409
                code: ABORTED
                message: Concurrency conflict.
            GENERIC_409_ALREADY_EXISTS:
              description: Trying to create an existing resource
              value:
                status: 409
                code: ALREADY_EXISTS
                message: The resource that a client tried to create already exists.
            GENERIC_409_CONFLICT:
              description: Duplication of an existing resource
              value:
                status: 409
                code: CONFLICT
                message: A specified resource duplicate entry found.
            GENERIC_409_NETWORK_NOT_REMOVABLE:
              description: The specified network cannot be removed
              value:
                status: 409
                code: NETWORK_NOT_REMOVABLE
                message: |
                  The specified network cannot be removed: {{NetworkId}}: {{reason}}

    Generic410:
      description: Gone
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_410_GONE:
              description: Use in notifications flow to allow API Consumer to indicate that its callback is no longer available
              value:
                status: 410
                code: GONE
                message: Access to the target resource is no longer available.

    Generic412:
      description: Failed precondition
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_412_FAILED_PRECONDITION:
              description: Use in notifications flow to allow API Consumer to indicate that its callback is no longer available
              value:
                status: 412
                code: FAILED_PRECONDITION
                message: Request cannot be executed in the current system state.

    Generic415:
      description: Unsupported Media Type
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_415_UNSUPPORTED_MEDIA_TYPE:
              description: Payload format of the request is in an unsupported format by the Server. Should not happen
              value:
                status: 415
                code: UNSUPPORTED_MEDIA_TYPE
                message: The server refuses to accept the request because the payload format is in an unsupported format.

    Generic422:
      description: Unprocessable Content
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_422_DEVICE_IDENTIFIERS_MISMATCH:
              description: Inconsistency between device identifiers not pointing to the same device
              value:
                status: 422
                code: DEVICE_IDENTIFIERS_MISMATCH
                message: Provided device identifiers are not consistent.
            GENERIC_422_DEVICE_NOT_APPLICABLE:
              description: Service is not available for the provided device
              value:
                status: 422
                code: DEVICE_NOT_APPLICABLE
                message: The service is not available for the provided device.
            GENERIC_422_UNIDENTIFIABLE_DEVICE:
              description: The device identifier is not included in the request and the device information cannot be derived from the 3-legged access token
              value:
                status: 422
                code: UNIDENTIFIABLE_DEVICE
                message: The device cannot be identified.

    Generic429:
      description: Too Many Requests
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Either out of resource quota or reaching rate limiting.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: API Server request limit is overpassed
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Either out of resource quota or reaching rate limiting.

    Generic500:
      description: Internal Server Error
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_500_INTERNAL:
              description: Problem in Server side. Regular Server Exception
              value:
                status: 500
                code: INTERNAL
                message: Unknown server error. Typically a server bug.

    Generic501:
      description: Not Implemented
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_501_NOT_IMPLEMENTED:
              description: Service not implemented. The use of this code should be avoided as far as possible to get the objective to reach aligned implementations
              value:
                status: 501
                code: NOT_IMPLEMENTED
                message: This functionality is not implemented yet.

    Generic502:
      description: Bad Gateway
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_502_BAD_GATEWAY:
              description: Internal routing problem in the Server side that blocks to manage the service properly
              value:
                status: 502
                code: BAD_GATEWAY
                message: An upstream internal service cannot be reached.

    Generic503:
      description: Service Unavailable
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_503_UNAVAILABLE:
              description: Service is not available. Temporary situation usually related to maintenance process in the server side
              value:
                status: 503
                code: UNAVAILABLE
                message: Service Unavailable.
    Generic504:
      description: Gateway Timeout
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_504_TIMEOUT:
              description: API Server Timeout
              value:
                status: 504
                code: TIMEOUT
                message: Request timeout exceeded.
